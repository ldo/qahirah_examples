#!/usr/bin/python3
#+
# Example use of Qahirah: various fun things with paths.
#
# Copyright 2015 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>.
# This script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import os
import colorsys
import qahirah as qah
CAIRO = qah.CAIRO
Matrix = qah.Matrix
Rect = qah.Rect
deg = qah.deg

nr_figures = 5

pat = qah.Pattern.create_linear \
  (
    p0 = (0, 0),
    p1 = (1, 1),
    color_stops =
        (
            ((0,) + colorsys.hsv_to_rgb(0.6, 0.9, 0.7)),
            ((0.5,) + colorsys.hsv_to_rgb(0.1, 0.9, 0.9)),
            ((0,) + colorsys.hsv_to_rgb(0.6, 0.9, 0.7)),
        )
  )
pat.extend = CAIRO.EXTEND_REPEAT
pat.matrix = Rect.from_dimensions((1, 1)).transform_to(Rect.from_dimensions((0.1, 0.1)))

pix = qah.ImageSurface.create \
  (
    format = CAIRO.FORMAT_RGB24,
    dimensions = (600, 600)
  )
g = qah.Context(pix)
origin_to_center = Matrix.translation(pix.dimensions / 2)
angle_step = 360 / deg / nr_figures
offset_from_origin = Matrix.translation((0, 70))

# create path
shape = \
    (g
        .new_path()
        .arc(center = (0, 130), radius = 70, angle1 = 0, angle2 = 360 / deg)
        .new_sub_path()
        .arc(center = (0, 70), radius = 70, angle1 = 0, angle2 = 360 / deg)
    ).copy_path()
# sys.stderr.write(repr(list(shape.elements)) + "\n") # debug

# now do the actual drawing
(g
    .set_operator(CAIRO.OPERATOR_SOURCE)
    .set_source_rgb(1, 1, 1)
    .paint()
    .set_source_rgb(*colorsys.hsv_to_rgb(0.4, 0.9, 0.4))
)

(g
    .set_matrix(origin_to_center * Matrix.rotation(angle_step) * offset_from_origin)
    .new_path()
    .append_path(shape)
    .set_dash(((5, 2, 5, 2, 5, 2, 2, 2, 2, 2, 2, 2), 0))
    .set_line_width(10)
    .set_line_cap(CAIRO.LINE_CAP_BUTT)
    .stroke()
).dash = ((), 0)

g.matrix = g.matrix = origin_to_center * Matrix.rotation(2 * angle_step) * offset_from_origin
g.new_path()
g.append_path(shape)
g.dash = ((5, 8, 2, 8), 0)
g.line_width = 4
g.line_cap = CAIRO.LINE_CAP_ROUND
g.stroke()
g.dash = ((), 0)

g.matrix = g.matrix = origin_to_center * Matrix.rotation(3 * angle_step) * offset_from_origin
g.new_path()
g.append_path(shape)
g.dash = ((5, 8, 2, 8), 0)
g.line_width = 5
g.line_cap = CAIRO.LINE_CAP_SQUARE
g.stroke()
g.dash = ((), 0)

g.source = pat

g.matrix = g.matrix = origin_to_center * Matrix.rotation(4 * angle_step) * offset_from_origin
g.new_path()
g.append_path(shape)
g.fill_rule = CAIRO.FILL_RULE_WINDING
g.fill()

g.matrix = g.matrix = origin_to_center * Matrix.rotation(0 * angle_step) * offset_from_origin
g.new_path()
g.append_path(shape)
g.fill_rule = CAIRO.FILL_RULE_EVEN_ODD
g.fill()

pix.flush()
pix.write_to_png("%s.png" % os.path.basename(sys.argv[0]))
