#!/usr/bin/python3
#+
# Using a gradient to achieve a shiny-metal effect.
#
# Copyright 2016 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import os
import qahirah as qah
from qahirah import \
    CAIRO, \
    Colour, \
    Matrix, \
    Vector

the_pattern = qah.Pattern.create_linear \
    (
        p0 = (0, 0),
        p1 = (0, 1),
        colour_stops = tuple
            (
                (offs, Colour.grey(intens))
                for offs, intens in
                    (
                        (0, 0.9),
                        (0.3, 0.65),
                        (0.4, 0.5),
                        (0.45, 0.45),
                        (0.5, 0.4),
                        (0.6, 0.5),
                        (1, 0.8),
                    )
            )
    )
use_font = \
    (qah.Context.create_for_dummy()
        .set_font_face(qah.FontFace.create_for_pattern("serif:weight=bold"))
        .set_font_size(72)
    ).scaled_font
the_text = "Ooh! Shiny!"
margin = Vector(10, 10)
bounds = use_font.text_extents(the_text).bounds
#sys.stdout.write("text advance = {}\n".format(use_font.text_extents(the_text).advance)) # debug
pix = qah.ImageSurface.create \
  (
    format = CAIRO.FORMAT_RGB24,
    dimensions = round(bounds.inset(- margin)).dimensions
  )
#sys.stderr.write("text bounds = %s\n" % bounds) # debug
the_pattern.matrix = ~Matrix.scale(abs(bounds.height))
(qah.Context.create(pix)
    .set_source_colour(Colour.grey(1))
    .paint()
    .set_matrix(Matrix.translate(margin))
    .set_source(the_pattern)
    .set_matrix(Matrix.translate(margin - bounds.topleft))
    .set_scaled_font(use_font)
    .move_to((0, 0))
    .show_text(the_text)
)
pix.flush().write_to_png("%s.png" % os.path.basename(sys.argv[0]))
