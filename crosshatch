#!/usr/bin/python3
#+
# Qahirah example -- Demonstration of how to create crosshatch patterns.
#
# Copyright 2018 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import os
import math
import qahirah as qah
from qahirah import \
    CAIRO, \
    Colour, \
    Matrix, \
    Path, \
    Rect, \
    Vector
Pt = Path.Point

dpi = 144
label_font_size = 10
pat_line_width = 1
figure_dimensions = Vector(80, 80)
figure_margin = Vector(10, 10)
label_margin = 0
pat_colour = Colour.grey(0, 1)
frame_colour = Colour.from_hsva((0.55, 0.5, 0.5))
frame_line_width = 3
pat_bg_colour = Colour.from_hsva((0.1, 0.5, 0.9))
label_colour = frame_colour

def crosshatch(dims, components, angle) :
    "generates a crosshatch pattern. dims is a Vector giving the dimensions" \
    " of the repeating cell; components is a sequence of Paths to be stroked" \
    " to create the pattern, and angle is an angle at which to rotate the final" \
    " pattern."
    surf = qah.RecordingSurface.create \
      (
        content = CAIRO.CONTENT_COLOUR_ALPHA,
        extents = Rect.from_dimensions(dims)
      )
    ctx = qah.Context.create(surf)
    ctx.line_width = pat_line_width
    for item in components :
        item.draw(ctx)
        ctx.stroke()
    #end for
    surf.flush()
    return \
        (qah.Pattern.create_for_surface(surf)
            .set_matrix(Matrix.rotate(- angle))
            .set_extend(CAIRO.EXTEND_REPEAT)
        )
#end crosshatch

# samples taken from
# <http://jensen.sdsmt.edu/IENG248/Materials/IENG%20248%20Standard%20Material%20Cross%20Hatch%20Patterns%20-%20from%20text.pdf>
patterns = \
    (
        {
            "name" : "cast iron",
            "pat" :
                crosshatch
                  (
                    dims = (8, 8),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 8), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "rubber/plastic",
            "pat" :
                crosshatch
                  (
                    dims = (12, 12),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((3, 0), False),
                                            Pt((3, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((5, 0), False),
                                            Pt((5, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((7, 0), False),
                                            Pt((7, 12), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "electrical",
            "pat" :
                crosshatch
                  (
                    dims = (6, 6),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 6), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((0, 1), False),
                                            Pt((6, 1), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 0,
                  ),
        },
        {
            "name" : "sand",
            "pat" :
                crosshatch
                  (
                    dims = (8, 8),
                    components =
                      (
                        Path
                          (
                            tuple
                              (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((x, y), False),
                                            Pt((x + 0.5, y + 0.5), False),
                                        ),
                                    closed = False
                                  )
                                for x in (1, 5)
                                for y in (1, 5)
                              )
                          ),
                      ),
                    angle = 30 * qah.deg,
                  ),
        },
        {
            "name" : "steel",
            "pat" :
                crosshatch
                  (
                    dims = (8, 8),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 8), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((3, 0), False),
                                            Pt((3, 8), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "cork/felt",
            "pat" :
                crosshatch
                  (
                    dims = (14, 10),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 4), False),
                                            Pt((3, 3), True),
                                            Pt((3, 3), True),
                                            Pt((5, 3), False),
                                            Pt((7, 3), False),
                                            Pt((9, 3), True),
                                            Pt((9, 3), True),
                                            Pt((11, 2), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((3, 9), False),
                                            Pt((5, 8), True),
                                            Pt((5, 8), True),
                                            Pt((7, 8), False),
                                            Pt((9, 8), False),
                                            Pt((11, 8), True),
                                            Pt((11, 8), True),
                                            Pt((13, 7), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 0,
                  ),
        },
        {
            "name" : "bronze/brass",
            "pat" :
                crosshatch
                  (
                    dims = (12, 12),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((7, 0), False),
                                            Pt((7, 9), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "marble/glass",
            "pat" :
                crosshatch
                  (
                    dims = (12, 12),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 4), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 8), False),
                                            Pt((1, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((7, 0), False),
                                            Pt((7, 9), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "zinc/lead",
            "pat" :
                crosshatch
                  (
                    dims = (6, 6),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 6), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((0, 1), False),
                                            Pt((6, 1), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "thermal",
            "pat" :
                crosshatch
                  (
                    dims = (12, 12),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((6, 0), False),
                                            Pt((6, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((3, 0), False),
                                            Pt((9, 6), False),
                                            Pt((3, 12), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "Mg/Al",
            "pat" :
                crosshatch
                  (
                    dims = (16, 16),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((4, 0), False),
                                            Pt((4, 16), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((12, 0), False),
                                            Pt((12, 16), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((0, 1), False),
                                            Pt((8, 1), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((8, 9), False),
                                            Pt((16, 9), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
        {
            "name" : "titanium",
            "pat" :
                crosshatch
                  (
                    dims = (12, 12),
                    components =
                      (
                        Path
                          (
                            (
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((1, 0), False),
                                            Pt((1, 12), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((4, 0), False),
                                            Pt((4, 10), False),
                                        ),
                                    closed = False
                                  ),
                                Path.Segment
                                  (
                                    points =
                                        (
                                            Pt((7, 0), False),
                                            Pt((7, 12), False),
                                        ),
                                    closed = False
                                  ),
                            )
                          ),
                      ),
                    angle = 45 * qah.deg,
                  ),
        },
    )

#+
# Mainline
#-

nr_cols = math.ceil(math.sqrt(len(patterns)))
nr_rows = math.ceil(len(patterns) / nr_cols)

ctx = qah.Context.create_for_dummy()
ctx.select_font_face("sans-serif", CAIRO.FONT_SLANT_NORMAL, CAIRO.FONT_WEIGHT_NORMAL)
ctx.set_font_size(label_font_size)
label_font = ctx.scaled_font
label_text_height = ctx.font_extents.height
figure_plus_label_dimensions = figure_dimensions + Vector(0, label_text_height + label_margin)

pix = qah.ImageSurface.create \
  (
    format = CAIRO.FORMAT_RGB24,
    dimensions = round
      (
            (
                Vector(nr_cols, nr_rows) * (figure_plus_label_dimensions + figure_margin)
            +
                figure_margin
            )
        *
            dpi / qah.base_dpi
      )
  )
ctx = \
    (qah.Context.create(pix)
        .scale(dpi / qah.base_dpi)
        .set_source_colour(Colour.grey(1, 1))
        .paint()
        .set_line_width(frame_line_width)
        .set_scaled_font(label_font)
    )

row = 0
col = 0
for pattern in patterns :
    (ctx.save()
        .translate
          (
                Vector(col, row) * (figure_plus_label_dimensions + figure_margin)
            +
                figure_margin
          )
    )
    (ctx
        .new_path()
        .set_source_colour(frame_colour)
        .rectangle(Rect.from_dimensions(figure_dimensions).inset(Vector(1, 1) * frame_line_width))
        .stroke_preserve()
        .set_source_colour(pat_bg_colour)
        .fill_preserve()
        .set_source_colour(pat_colour)
        .set_source(pattern["pat"])
        .fill()
    )
    (ctx
        .set_source_colour(label_colour)
        .move_to
          (
                Vector(0.5, 1) * figure_dimensions
            +
                Vector
                  (
                    - ctx.text_extents(pattern["name"]).x_advance / 2,
                    label_margin + label_text_height
                  )
          )
        .show_text(pattern["name"])
    )
    ctx.restore()
    col += 1
    if col == nr_cols :
        col = 0
        row += 1
    #end if
#end for

pix.flush().write_to_png("%s.png" % os.path.basename(sys.argv[0]))
