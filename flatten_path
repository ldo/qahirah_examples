#!/usr/bin/python3
#+
# Compare different levels of path-flattening tolerance.
#
# Copyright 2015 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import os
import qahirah as qah
from qahirah import \
    CAIRO, \
    Colour, \
    Matrix, \
    Path, \
    Vector

base_resolution = 72

image_dimensions = Vector(100, 100)
max_thickness = 30
resolution = 300
pix = qah.ImageSurface.create \
  (
    format = CAIRO.FORMAT_ARGB32,
    dimensions = round((image_dimensions + Vector(1, 1) * max_thickness) * resolution / base_resolution)
  )
draw = \
    (qah.Context.create(pix)
        .set_source_colour(Colour.grey(0, 0))
        .paint()
        .set_source_colour(Colour.grey(0, 1))
        .set_matrix
          (
                Matrix.scale(resolution / base_resolution)
            *
                Matrix.translate(Vector(1, 1) * max_thickness / 2)
          )
    )
figure = Path \
  (
    [
        Path.Segment
          (
            points =
                [
                    Path.Point((0, 0.5), False),
                    Path.Point((0, 0), True),
                    Path.Point((0.25, 0), True),
                    Path.Point((0.5, 0.5), False),
                    Path.Point((0.75, 1), True),
                    Path.Point((1, 1), True),
                    Path.Point((1, 0.5), False),
                    Path.Point((1, 0), True),
                    Path.Point((0.75, 0), True),
                    Path.Point((0.5, 0.5), False),
                    Path.Point((0.25, 1), True),
                    Path.Point((0, 1), True),
                    Path.Point((0, 0.5), False),
                ],
            closed = True
          )
    ]
  ).transform(Matrix.scale(image_dimensions))

for \
    thickness, grey, tolerance \
in \
    (
        (30, 0.9, 10),
        (23, 0.65, 5),
        (16, 0.4, 2.5),
        (9, 0.25, 1),
        (2, 0.1, 0.1),
    ) \
:
    (draw
        .new_path()
        .append_path(figure)
        .set_tolerance(tolerance)
        .set_line_width(thickness)
        .set_source_colour(Colour.grey(grey, 1))
        .stroke()
    )
#end for
pix.flush()
pix.write_to_png("{}.png".format(os.path.basename(sys.argv[0])))
